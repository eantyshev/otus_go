// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calendar.proto

package adapters

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListRequest_Period int32

const (
	ListRequest_UNSPECIFIED ListRequest_Period = 0
	ListRequest_DAY         ListRequest_Period = 1
	ListRequest_WEEK        ListRequest_Period = 2
	ListRequest_MONTH       ListRequest_Period = 3
)

var ListRequest_Period_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "DAY",
	2: "WEEK",
	3: "MONTH",
}

var ListRequest_Period_value = map[string]int32{
	"UNSPECIFIED": 0,
	"DAY":         1,
	"WEEK":        2,
	"MONTH":       3,
}

func (x ListRequest_Period) String() string {
	return proto.EnumName(ListRequest_Period_name, int32(x))
}

func (ListRequest_Period) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{3, 0}
}

type UUID struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UUID) Reset()         { *m = UUID{} }
func (m *UUID) String() string { return proto.CompactTextString(m) }
func (*UUID) ProtoMessage()    {}
func (*UUID) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{0}
}

func (m *UUID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UUID.Unmarshal(m, b)
}
func (m *UUID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UUID.Marshal(b, m, deterministic)
}
func (m *UUID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UUID.Merge(m, src)
}
func (m *UUID) XXX_Size() int {
	return xxx_messageInfo_UUID.Size(m)
}
func (m *UUID) XXX_DiscardUnknown() {
	xxx_messageInfo_UUID.DiscardUnknown(m)
}

var xxx_messageInfo_UUID proto.InternalMessageInfo

func (m *UUID) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type AppointmentInfo struct {
	Summary              string               `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	Description          string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	StartsAt             *timestamp.Timestamp `protobuf:"bytes,4,opt,name=starts_at,json=startsAt,proto3" json:"starts_at,omitempty"`
	Duration             *duration.Duration   `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Owner                string               `protobuf:"bytes,6,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AppointmentInfo) Reset()         { *m = AppointmentInfo{} }
func (m *AppointmentInfo) String() string { return proto.CompactTextString(m) }
func (*AppointmentInfo) ProtoMessage()    {}
func (*AppointmentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{1}
}

func (m *AppointmentInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppointmentInfo.Unmarshal(m, b)
}
func (m *AppointmentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppointmentInfo.Marshal(b, m, deterministic)
}
func (m *AppointmentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppointmentInfo.Merge(m, src)
}
func (m *AppointmentInfo) XXX_Size() int {
	return xxx_messageInfo_AppointmentInfo.Size(m)
}
func (m *AppointmentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AppointmentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AppointmentInfo proto.InternalMessageInfo

func (m *AppointmentInfo) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *AppointmentInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AppointmentInfo) GetStartsAt() *timestamp.Timestamp {
	if m != nil {
		return m.StartsAt
	}
	return nil
}

func (m *AppointmentInfo) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *AppointmentInfo) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type Appointment struct {
	Uuid                 *UUID            `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Info                 *AppointmentInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Appointment) Reset()         { *m = Appointment{} }
func (m *Appointment) String() string { return proto.CompactTextString(m) }
func (*Appointment) ProtoMessage()    {}
func (*Appointment) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{2}
}

func (m *Appointment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Appointment.Unmarshal(m, b)
}
func (m *Appointment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Appointment.Marshal(b, m, deterministic)
}
func (m *Appointment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Appointment.Merge(m, src)
}
func (m *Appointment) XXX_Size() int {
	return xxx_messageInfo_Appointment.Size(m)
}
func (m *Appointment) XXX_DiscardUnknown() {
	xxx_messageInfo_Appointment.DiscardUnknown(m)
}

var xxx_messageInfo_Appointment proto.InternalMessageInfo

func (m *Appointment) GetUuid() *UUID {
	if m != nil {
		return m.Uuid
	}
	return nil
}

func (m *Appointment) GetInfo() *AppointmentInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type ListRequest struct {
	Owner                string             `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Period               ListRequest_Period `protobuf:"varint,2,opt,name=period,proto3,enum=adapters.ListRequest_Period" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{3}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ListRequest) GetPeriod() ListRequest_Period {
	if m != nil {
		return m.Period
	}
	return ListRequest_UNSPECIFIED
}

type ListResponse struct {
	Appointments         []*Appointment `protobuf:"bytes,1,rep,name=appointments,proto3" json:"appointments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{4}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetAppointments() []*Appointment {
	if m != nil {
		return m.Appointments
	}
	return nil
}

func init() {
	proto.RegisterEnum("adapters.ListRequest_Period", ListRequest_Period_name, ListRequest_Period_value)
	proto.RegisterType((*UUID)(nil), "adapters.UUID")
	proto.RegisterType((*AppointmentInfo)(nil), "adapters.AppointmentInfo")
	proto.RegisterType((*Appointment)(nil), "adapters.Appointment")
	proto.RegisterType((*ListRequest)(nil), "adapters.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "adapters.ListResponse")
}

func init() { proto.RegisterFile("calendar.proto", fileDescriptor_e3d25d49f056cdb2) }

var fileDescriptor_e3d25d49f056cdb2 = []byte{
	// 489 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x8d, 0xf3, 0x55, 0x67, 0x5c, 0xa5, 0xce, 0x0a, 0x2a, 0x63, 0x2a, 0x88, 0x7c, 0xca, 0x05,
	0x57, 0x32, 0xa0, 0x8a, 0x03, 0x87, 0x28, 0x36, 0x60, 0x01, 0xa5, 0x32, 0x8d, 0x10, 0x27, 0xd8,
	0xd6, 0x9b, 0xca, 0x52, 0xec, 0x5d, 0x76, 0xd7, 0xa0, 0xfe, 0x0d, 0xce, 0xfc, 0x2b, 0xfe, 0x50,
	0xe5, 0xdd, 0xb8, 0x71, 0xdd, 0xf4, 0x38, 0x33, 0x6f, 0xde, 0xbc, 0xf7, 0xbc, 0x86, 0xf1, 0x25,
	0x5e, 0x93, 0x22, 0xc5, 0xdc, 0x67, 0x9c, 0x4a, 0x8a, 0x4c, 0x9c, 0x62, 0x26, 0x09, 0x17, 0xee,
	0xf3, 0x2b, 0x4a, 0xaf, 0xd6, 0xe4, 0x58, 0xf5, 0x2f, 0xca, 0xd5, 0xb1, 0xcc, 0x72, 0x22, 0x24,
	0xce, 0x99, 0x86, 0xba, 0xcf, 0xda, 0x80, 0xb4, 0xe4, 0x58, 0x66, 0xb4, 0xd8, 0xcc, 0x9f, 0xb6,
	0xe7, 0x24, 0x67, 0xf2, 0x5a, 0x0f, 0xbd, 0x23, 0xe8, 0x2f, 0x97, 0x71, 0x88, 0x1e, 0xc1, 0xe0,
	0x37, 0x5e, 0x97, 0xc4, 0x31, 0xa6, 0xc6, 0x6c, 0x94, 0xe8, 0xc2, 0xfb, 0x6f, 0xc0, 0xc1, 0x9c,
	0x31, 0x9a, 0x15, 0x32, 0x27, 0x85, 0x8c, 0x8b, 0x15, 0x45, 0x0e, 0xec, 0x89, 0x32, 0xcf, 0x31,
	0xbf, 0x76, 0xba, 0x0a, 0x5b, 0x97, 0x68, 0x0a, 0x56, 0x4a, 0xc4, 0x25, 0xcf, 0x58, 0x75, 0xdd,
	0xe9, 0xa9, 0x69, 0xb3, 0x85, 0x4e, 0x60, 0x24, 0x24, 0xe6, 0x52, 0xfc, 0xc0, 0xd2, 0xe9, 0x4f,
	0x8d, 0x99, 0x15, 0xb8, 0xbe, 0x96, 0xe7, 0xd7, 0xf2, 0xfc, 0xf3, 0xda, 0x5f, 0x62, 0x6a, 0xf0,
	0x5c, 0xa2, 0xd7, 0x60, 0xd6, 0xae, 0x9c, 0x81, 0xda, 0x7b, 0x72, 0x6f, 0x2f, 0xdc, 0x00, 0x92,
	0x5b, 0x68, 0xe5, 0x8a, 0xfe, 0x29, 0x08, 0x77, 0x86, 0xda, 0x95, 0x2a, 0xbc, 0x9f, 0x60, 0x35,
	0x4c, 0x21, 0x0f, 0xfa, 0x65, 0x99, 0xa5, 0xca, 0xb9, 0x15, 0x8c, 0xfd, 0x3a, 0x79, 0xbf, 0x0a,
	0x26, 0x51, 0x33, 0xf4, 0x02, 0xfa, 0x59, 0xb1, 0xa2, 0xca, 0x71, 0x75, 0xfb, 0x16, 0xd3, 0x4a,
	0x27, 0x51, 0x30, 0xef, 0xaf, 0x01, 0xd6, 0xa7, 0x4c, 0xc8, 0x84, 0xfc, 0x2a, 0x89, 0x90, 0x5b,
	0x1d, 0x46, 0x43, 0x07, 0x7a, 0x05, 0x43, 0x46, 0x78, 0x46, 0x53, 0x45, 0x3b, 0x0e, 0x8e, 0xb6,
	0xb4, 0x8d, 0x65, 0xff, 0x4c, 0x61, 0x92, 0x0d, 0xd6, 0x3b, 0x81, 0xa1, 0xee, 0xa0, 0x03, 0xb0,
	0x96, 0xa7, 0x5f, 0xcf, 0xa2, 0x45, 0xfc, 0x2e, 0x8e, 0x42, 0xbb, 0x83, 0xf6, 0xa0, 0x17, 0xce,
	0xbf, 0xdb, 0x06, 0x32, 0xa1, 0xff, 0x2d, 0x8a, 0x3e, 0xda, 0x5d, 0x34, 0x82, 0xc1, 0xe7, 0x2f,
	0xa7, 0xe7, 0x1f, 0xec, 0x9e, 0x17, 0xc3, 0xbe, 0xa6, 0x15, 0x8c, 0x16, 0x82, 0xa0, 0x37, 0xb0,
	0x8f, 0xb7, 0xea, 0x85, 0x63, 0x4c, 0x7b, 0x33, 0x2b, 0x78, 0xbc, 0xd3, 0x5b, 0x72, 0x07, 0x1a,
	0xfc, 0xeb, 0x82, 0xb9, 0xd8, 0x3c, 0x58, 0xf4, 0x1e, 0x26, 0x0b, 0x4e, 0xb0, 0x24, 0xcd, 0x50,
	0x1f, 0x8e, 0xc8, 0xdd, 0x7d, 0xc1, 0xeb, 0xa0, 0x05, 0x4c, 0x96, 0x2c, 0x6d, 0x11, 0xed, 0x46,
	0x3f, 0x4c, 0xf2, 0x16, 0x26, 0x21, 0x59, 0x93, 0xbb, 0x24, 0xad, 0x8f, 0xea, 0x1e, 0xde, 0x7b,
	0x3c, 0x51, 0xf5, 0x4f, 0x28, 0x0d, 0x76, 0x15, 0x52, 0x63, 0x59, 0x34, 0x25, 0x34, 0xbe, 0x8b,
	0x7b, 0xd8, 0x6e, 0xeb, 0x5c, 0xbd, 0xce, 0xc5, 0x50, 0xd1, 0xbe, 0xbc, 0x09, 0x00, 0x00, 0xff,
	0xff, 0x99, 0xdc, 0x3a, 0xb0, 0xd5, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalendarClient is the client API for Calendar service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalendarClient interface {
	CreateAppointment(ctx context.Context, in *AppointmentInfo, opts ...grpc.CallOption) (*Appointment, error)
	UpdateAppointment(ctx context.Context, in *Appointment, opts ...grpc.CallOption) (*Appointment, error)
	DeleteAppointment(ctx context.Context, in *UUID, opts ...grpc.CallOption) (*empty.Empty, error)
	ListAppointments(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
}

type calendarClient struct {
	cc *grpc.ClientConn
}

func NewCalendarClient(cc *grpc.ClientConn) CalendarClient {
	return &calendarClient{cc}
}

func (c *calendarClient) CreateAppointment(ctx context.Context, in *AppointmentInfo, opts ...grpc.CallOption) (*Appointment, error) {
	out := new(Appointment)
	err := c.cc.Invoke(ctx, "/adapters.Calendar/CreateAppointment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) UpdateAppointment(ctx context.Context, in *Appointment, opts ...grpc.CallOption) (*Appointment, error) {
	out := new(Appointment)
	err := c.cc.Invoke(ctx, "/adapters.Calendar/UpdateAppointment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) DeleteAppointment(ctx context.Context, in *UUID, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adapters.Calendar/DeleteAppointment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) ListAppointments(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/adapters.Calendar/ListAppointments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalendarServer is the server API for Calendar service.
type CalendarServer interface {
	CreateAppointment(context.Context, *AppointmentInfo) (*Appointment, error)
	UpdateAppointment(context.Context, *Appointment) (*Appointment, error)
	DeleteAppointment(context.Context, *UUID) (*empty.Empty, error)
	ListAppointments(context.Context, *ListRequest) (*ListResponse, error)
}

// UnimplementedCalendarServer can be embedded to have forward compatible implementations.
type UnimplementedCalendarServer struct {
}

func (*UnimplementedCalendarServer) CreateAppointment(ctx context.Context, req *AppointmentInfo) (*Appointment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAppointment not implemented")
}
func (*UnimplementedCalendarServer) UpdateAppointment(ctx context.Context, req *Appointment) (*Appointment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAppointment not implemented")
}
func (*UnimplementedCalendarServer) DeleteAppointment(ctx context.Context, req *UUID) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAppointment not implemented")
}
func (*UnimplementedCalendarServer) ListAppointments(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAppointments not implemented")
}

func RegisterCalendarServer(s *grpc.Server, srv CalendarServer) {
	s.RegisterService(&_Calendar_serviceDesc, srv)
}

func _Calendar_CreateAppointment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppointmentInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).CreateAppointment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adapters.Calendar/CreateAppointment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).CreateAppointment(ctx, req.(*AppointmentInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_UpdateAppointment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Appointment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).UpdateAppointment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adapters.Calendar/UpdateAppointment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).UpdateAppointment(ctx, req.(*Appointment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_DeleteAppointment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UUID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).DeleteAppointment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adapters.Calendar/DeleteAppointment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).DeleteAppointment(ctx, req.(*UUID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_ListAppointments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).ListAppointments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adapters.Calendar/ListAppointments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).ListAppointments(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Calendar_serviceDesc = grpc.ServiceDesc{
	ServiceName: "adapters.Calendar",
	HandlerType: (*CalendarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAppointment",
			Handler:    _Calendar_CreateAppointment_Handler,
		},
		{
			MethodName: "UpdateAppointment",
			Handler:    _Calendar_UpdateAppointment_Handler,
		},
		{
			MethodName: "DeleteAppointment",
			Handler:    _Calendar_DeleteAppointment_Handler,
		},
		{
			MethodName: "ListAppointments",
			Handler:    _Calendar_ListAppointments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calendar.proto",
}
